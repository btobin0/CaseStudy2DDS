{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"fifa %>% select(Acceleration, Agility, Position) %>% filter(ggpairs)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withVisible(eval(quote(`_fseq`(`_lhs`)), env, env))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"`_fseq`(`_lhs`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"freduce(value, `_function_list`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withVisible(function_list[[k]](value))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"function_list[[k]](value)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"filter(., ggpairs)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"filter.data.frame(., ggpairs)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"as.data.frame(filter(tbl_df(.data), ..., .preserve = .preserve))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"filter(tbl_df(.data), ..., .preserve = .preserve)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"filter.tbl_df(tbl_df(.data), ..., .preserve = .preserve)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"filter_impl(.data, quo)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(structure(list(message = \"Argument 2 filter condition does not evaluate to a logical vector\", \n    call = NULL, cppstack = NULL), class = c(\"Rcpp::exception\", \n\"C++Error\", \"error\", \"condition\")))","line_number":0}],"message":"Error: Argument 2 filter condition does not evaluate to a logical vector\n"}