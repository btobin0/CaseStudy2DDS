str(df1)
str(df2)
cbind(df1, Attrition)
df1$Attrition
str(df1)
df1[[Attrition]]
df1[Attrition]
df1$Attrition <-0
str(df1)
df2$Salary <-0
str(df2)
FullData = merge(df1,df1, by="ID")
head(FullData)
tail(FullData)
list.files()
df1<-read.csv("CaseStudy2CompSetNoAttrition.csv",head=T)
head(df1)
df2<-read.csv("CaseStudy2CompSetNoSalary.csv",head=T)
head(df2)
dim(df1)
dim(df2)
str(df1)
str(df2)
df1$Attrition <-0
str(df1)
FullData = merge(df1,df1, by="ID")
head(FullData)
tail(FullData)
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(tidyverse)
library(dplyr)
library(kableExtra)
library(magrittr)
library(readxl)
library(ggpmisc)
library(class)
library(caret)
library(ggplot2)
list.files()
df1<-read.csv("CaseStudy2CompSetNoAttrition.csv",head=T)
head(df1)
df2<-read.csv("CaseStudy2CompSetNoSalary.csv",head=T)
head(df2)
dim(df1)
dim(df2)
str(df1)
str(df2)
df1$Attrition <-0
str(df1)
df2$Salary <-0
str(df2)
#FullData = merge(df1,df1, by="ID")
#head(FullData)
#tail(FullData)
head(df1)
head(df2)
dim(df2)
dim(df1)
df1$Attrition <-0
str(df1)
head(df1)
dim(df1)
df2$Salary <-0
str(df2)
head(df2)
dim(df2)
rbind(setDT(df1), setDT(df2), fill=TRUE)
everything <-cbind(df1, df2)
head(everything)
tail(everything)
dim(everything)
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(tidyverse)
library(dplyr)
library(kableExtra)
library(magrittr)
library(readxl)
library(ggpmisc)
library(class)
library(caret)
library(ggplot2)
list.files()
df1<-read.csv("CaseStudy2CompSetNoAttrition.csv",head=T)
head(df1)
df2<-read.csv("CaseStudy2CompSetNoSalary.csv",head=T)
head(df2)
dim(df1)
dim(df2)
str(df1)
str(df2)
df1$Attrition <-0
str(df1)
head(df1)
dim(df1)
df2$Salary <-0
str(df2)
head(df2)
dim(df2)
AllData <- rbind(df2,df1)
identical(names(df2[[1]]), names(df1[[2]]) )
AllData <- rbind(df2,df1)
AllData <- rbind(df1,df2)
identical(names(df2[[1]]), names(df1[[2]]) )
identical(names(df2[[1]]), names(df1[[2]]) )
AllData <- rbind(df1,df2)
smartbind(df2,df1)
AllData <-merge(df2,df1, all.x=TRUE, all.y=TRUE)
dim(AllData)
head(AllData)
tail(AllData)
write.csv(AllData,"C:/Users/btobin/Documents/case2/AllData.csv")
dfa<-read.csv("AllData.csv",head=T)
dim(dfa)
head(dfa)
tail(dfa)
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(tidyverse)
library(dplyr)
library(kableExtra)
library(magrittr)
library(readxl)
library(ggpmisc)
library(class)
library(caret)
library(ggplot2)
list.files()
#df1<-read.csv("CaseStudy2CompSetNoAttrition.csv",head=T)
#head(df1)
#df2<-read.csv("CaseStudy2CompSetNoSalary.csv",head=T)
#head(df2)
#dim(df1)
#dim(df2)
#str(df1)
#str(df2)
#df1$Attrition <-0
#str(df1)
#head(df1)
#dim(df1)
#df2$Salary <-0
#str(df2)
#head(df2)
#dim(df2)
#AllData <-merge(df2,df1, all.x=TRUE, all.y=TRUE)
#dim(AllData)
#head(AllData)
#tail(AllData)
#write.csv(AllData,"C:/Users/btobin/Documents/case2/AllData.csv")
dfa<-read.csv("AllData.csv",head=T)
dim(dfa)
head(dfa)
tail(dfa)
library(zoo)
dfa$Salary <- NULL
head(dfa)
dfa$Salary <- MonthlyRate * 12
dfa$Salary <- dfa$MonthlyRate * 12
head(dfa)
dfa$Salary <- dfa$MonthlyRate * 12
df %>% separate(BusinessTravel,
c("Travel", "Frequency"))
dfa$Salary <- dfa$MonthlyRate * 12
dfa %>% separate(BusinessTravel,
c("Travel", "Frequency"))
dfa %>% separate(JobRole,
c("Position", "Role"))
head(dfa)
dfa$Salary <- dfa$MonthlyRate * 12
dfa2 %>% separate(BusinessTravel,
c("Travel", "Frequency"))
dfa$Salary <- dfa$MonthlyRate * 12
head(dfa)
dfa2 <- separate(BusinessTravel,
c("Travel", "Frequency"))
dfa2 <- separate(dfa$BusinessTravel,
c("Travel", "Frequency"))
dfa %>% separate(BusinessTravel,
c("Travel", "Frequency"))
head(dfa)
dfa %>% separate(BusinessTravel,
c("Travel", "Frequency"))
write.csv(AllData,"C:/Users/btobin/Documents/case2/AllData.csv")
allDF1<-read.csv("C:/Users/btobin/Documents/case2/AllData.csv",head=T)
head(allDF1)
dfa %>% separate(BusinessTravel,
c("Travel", "Frequency"))
write.csv(dfa,"C:/Users/btobin/Documents/case2/AllData.csv")
allDF1<-read.csv("C:/Users/btobin/Documents/case2/AllData.csv",head=T)
head(allDF1)
dfa %>% separate(BusinessTravel,
c("Travel", "Frequency"))
write.csv(dfa,"C:/Users/btobin/Documents/case2/AllData2.csv")
allDF1<-read.csv("C:/Users/btobin/Documents/case2/AllData2.csv",head=T)
head(allDF1)
dfa %>% separate(BusinessTravel,
c("Travel", "Frequency"),
separate(JobRole,
c("Job","Role")))
dfa$Salary <- dfa$MonthlyRate * 12
head(dfa)
dfa %>% separate(BusinessTravel,
c("Travel", "Frequency"),
separate(JobRole,
c("Job","Role")))
dfa <- separate(BusinessTravel,
c("Travel", "Frequency"))
head(dfa)
dfa <- separate(BusinessTravel,
c("Travel", "Frequency"))
dfa <- separate(dfa$BusinessTravel,
c("Travel", "Frequency"))
dfa %>% separate(BusinessTravel,
c("Travel", "Frequency"))
dfa2 <- dfa
dfa2
dfa2 <- dfa %>% separate(BusinessTravel,
c("Travel", "Frequency"))
head(dfa2)
dfa2 <- dfa %>% separate(BusinessTravel,
c("Travel", "Frequency"))
write.csv(dfa2,"C:/Users/btobin/Documents/case2/AllData2.csv")
dfa3 <- dfa2 %>% separate(JobRole,
c("Job", "Role"))
write.csv(dfa2,"C:/Users/btobin/Documents/case2/AllData3.csv")
FinalDF<-read.csv("AllData3.csv",head=T)
head(FinalDF)
dfa3 <- dfa2 %>% separate(JobRole,
c("Job", "Role"))
write.csv(dfa2,"C:/Users/btobin/Documents/case2/AllData3.csv")
FinalDF<-read.csv("AllData3.csv",head=T)
head(FinalDF)
dfa3 <- dfa2 %>% separate(JobRole,
c("Job", "Role"))
write.csv(dfa2,"C:/Users/btobin/Documents/case2/AllData3.csv")
dfa2 <- dfa %>% separate(BusinessTravel,
c("Travel", "Frequency"))
write.csv(dfa2,"C:/Users/btobin/Documents/case2/AllData2.csv")
dfa3 <- dfa2 %>% separate(JobRole,
c("Job", "Role"))
write.csv(dfa2,"C:/Users/btobin/Documents/case2/AllData3.csv")
FinalDF<-read.csv("AllData3.csv",head=T)
head(FinalDF)
write.csv(dfa2,"C:/Users/btobin/Documents/case2/AllData3.csv")
dfa3 <- dfa2 %>% separate(JobRole,
c("Job", "Role"))
write.csv(dfa2,"C:/Users/btobin/Documents/case2/AllData3.csv")
dfa3 <- dfa2 %>% separate(JobRole,
c("Job", "Role"))
dfa3 <- dfa2 %>% separate(JobRole,
c("Job", "Role"))
write.csv(dfa3,"C:/Users/btobin/Documents/case2/AllData3.csv")
FinalDF<-read.csv("AllData3.csv",head=T)
head(FinalDF)
hist(FinalDF$Role)
hist(FinalDF$JobSatisfaction)
hist(FinalDF$MonthlyIncome)
hist(FinalDF$Salary)
install.packages("neuralnet")
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(tidyverse)
library(dplyr)
library(kableExtra)
library(magrittr)
library(readxl)
library(ggpmisc)
library(class)
library(caret)
library(ggplot2)
library(viridis)
library(neuralnet)
list.files()
#df1<-read.csv("CaseStudy2CompSetNoAttrition.csv",head=T)
#head(df1)
#df2<-read.csv("CaseStudy2CompSetNoSalary.csv",head=T)
#head(df2)
#dim(df1)
#dim(df2)
#str(df1)
#str(df2)
#df1$Attrition <-0
#str(df1)
#head(df1)
#dim(df1)
#df2$Salary <-0
#str(df2)
#head(df2)
#dim(df2)
#AllData <-merge(df2,df1, all.x=TRUE, all.y=TRUE)
#dim(AllData)
#head(AllData)
#tail(AllData)
#write.csv(AllData,"C:/Users/btobin/Documents/case2/AllData.csv")
#dfa<-read.csv("AllData.csv",head=T)
#dim(dfa)
#head(dfa)
#tail(dfa)
#dfa$Salary <- NULL
#head(dfa)
#dfa$Salary <- dfa$MonthlyRate * 12
#head(dfa)
#dfa2 <- dfa %>% separate(BusinessTravel,
#                c("Travel", "Frequency"))
#write.csv(dfa2,"C:/Users/btobin/Documents/case2/AllData2.csv")
#dfa3 <- dfa2 %>% separate(JobRole,
#                c("Job", "Role"))
#write.csv(dfa3,"C:/Users/btobin/Documents/case2/AllData3.csv")
FinalDF<-read.csv("AllData3.csv",head=T)
head(FinalDF)
tail(FinalDF)
hist(FinalDF$JobSatisfaction)
hist(FinalDF$MonthlyRate)
hist(FinalDF$Salary)
hist(FinalDF$YearsSinceLastPromotion)
hist(FinalDF$YearsWithCurrManager)
point<-ggplot(FinalDF, aes(x=Age,y=Salary, color=YearsSinceLastPromotion)) +
geom_point()
point
set.seed(100)
x <- rnorm(100)
bins=30
hist<-qplot(x=FinalDF$YearsInCurrentRole,y=FinalDF$YearsSinceLastPromotion,color=FinalDF$Age) +
geom_point()
hist
hist+scale_fill_gradientn(colours=rainbow(2))
ggplot(FinalDF, aes(YearsInCurrentRole,YearsSinceLastPromotion))+
geom_point(aes(color=Age))+
scale_color_viridis(option="D")
ggplot(FinalDF, aes(Age,YearsAtCompany))+
geom_point(aes(color=YearsSinceLastPromotion))+
geom_smooth(aes(color=YearsSinceLastPromotion,fill=YearsSinceLastPromotion), method ="lm")+
scale_color_viridis(option="D")
scale_fill_viridis(option="D")
ggplot(FinalDF, aes(Age,YearsAtCompany))+
geom_point(aes(color=PerformanceRating))+
geom_smooth(aes(color=PerformanceRating,fill=PerformanceRating), method ="lm")+
scale_color_viridis(option="D")
scale_fill_viridis(option="D")
ggplot(FinalDF, aes(Age,YearsAtCompany))+
geom_point(aes(color=JobSatisfaction))+
geom_smooth(aes(color=JobSatisfaction,fill=JobSatisfaction), method ="lm")+
scale_color_viridis(option="D")
scale_fill_viridis(option="D")
ggplot(FinalDF, aes(JobSatisfaction,YearsAtCompany))+
geom_point(aes(color=MonthlyRate))+
geom_smooth(aes(color=MonthlyRate,fill=MonthlyRate), method ="lm")+
scale_color_viridis(option="D")
scale_fill_viridis(option="D")
ggplot(FinalDF, aes(Age,YearsAtCompany))+
geom_point(aes(color=YearsSinceLastPromotion))+
geom_smooth(aes(color=YearsSinceLastPromotion,fill=YearsSinceLastPromotion), method ="lm")
ggplot(FinalDF, aes(Age,JobSatisfaction, fill=YearsSinceLastPromotion))+
geom_bar(stat = "identity", position = position_dodge2(0.9)) +
scale_color_viridis_d()
scale_fill_viridis(option="D")
ggplot(FinalDF, aes(Age,JobSatisfaction, fill=YearsAtCompany))+
geom_bar(stat = "identity", position = position_dodge2(0.9)) +
scale_color_viridis_d()
scale_fill_viridis(option="D")
tibble(
Stats = summary(FinalDF$Age) %>% names(),
Satisfaction = summary(FinalDF$JobSatisfaction),
Monthly_Rate = summary(FinalDF$MonthlyRate) %>% as.vector()
)
FinalDF %>%
ggplot(aes(Age, ..density..)) +
geom_histogram(fill="white", color="darkred", bins = 25) +
geom_density(color="navy", size=0.5, kernel = "epanechnikov")
FinalDF %>%
ggplot(aes(JobSatisfaction, ..density..)) +
geom_histogram(fill="white", color="darkred", bins = 25) +
geom_density(color="navy", size=0.5, kernel = "epanechnikov")
formula <- as.formula(y ~ x)
FinalDF %>%
ggplot(aes(Age, YearsAtCompany)) +
geom_point(color="blue", alpha=0.3) +
geom_smooth(formula = formula, method = "lm", color="darkred") +
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
formula = formula, parse = TRUE, na.rm = T)
lm(Age ~ YearsAtCompany, data = FinalDF) %>% summary() %$%
coefficients %>%
kable(format="html", align="lc", digits=4, row.names=T) %>%
kable_styling(full_width = F)
q8_v3 =
q8_v2 %>%
mutate(
ABV = log(ABV+1) %>% scale() %>% as.numeric(),
IBU = log(IBU) %>% scale() %>% as.numeric()
)
q8_v3 =
FinalDF %>%
mutate(
ABV = log(Age+1) %>% scale() %>% as.numeric(),
IBU = log(MonthlyRate) %>% scale() %>% as.numeric()
)
#Select train and test datasets
r = nrow(q8_v3)
p = 0.8
n = as.integer(p*r)
set.seed(198)
iterations = 100
accuracies = matrix(nrow = iterations, ncol = ks)
ks = 25
set.seed(189)
myseeds = runif(iterations) %>% multiply_by(1000) %>% round()
for(j in 1:iterations)
{
set.seed(myseeds[j])
index = sample(1:r, n, replace = F)
test.data = q8_v3[index,]
train.data = q8_v3[-index,]
for(i in 1:ks)
{
knn(
train = train.data %>% select(ABV, IBU),
test = test.data %>% select(ABV, IBU),
cl = train.data %$% beer_type,
k = i, prob = F
) -> knn_v0
confMat = confusionMatrix(table(knn_v0, test.data$beer_type))
accuracies[j,i] = confMat$overall[1]
}
#cat(j, "\n")
}
q8_v3 =
FinalDF %>%
mutate(
ABV = log(Age+1) %>% scale() %>% as.numeric(),
IBU = log(MonthlyRate) %>% scale() %>% as.numeric()
)
#Select train and test datasets
r = nrow(q8_v3)
p = 0.8
n = as.integer(p*r)
set.seed(198)
iterations = 100
accuracies = matrix(nrow = iterations, ncol = ks)
ks = 25
set.seed(189)
myseeds = runif(iterations) %>% multiply_by(1000) %>% round()
for(j in 1:iterations)
{
set.seed(myseeds[j])
index = sample(1:r, n, replace = F)
test.data = q8_v3[index,]
train.data = q8_v3[-index,]
for(i in 1:ks)
{
knn(
train = train.data %>% select(Age, MonthlyRate),
test = test.data %>% select(Age, MonthlyRate),
cl = train.data %$% Age,
k = i, prob = F
) -> knn_v0
confMat = confusionMatrix(table(knn_v0, test.data$Age))
accuracies[j,i] = confMat$overall[1]
}
#cat(j, "\n")
}
scaled = as.data.frame(scale(Finaldf, center=min,scale=max-min))
formula <- as.formula(y ~ x)
FinalDF %>%
ggplot(aes(Age, YearsAtCompany)) +
geom_point(color="blue", alpha=0.3) +
geom_smooth(formula = formula, method = "lm", color="darkred") +
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
formula = formula, parse = TRUE, na.rm = T)
lm(Age ~ YearsAtCompany, data = FinalDF) %>% summary() %$%
coefficients %>%
kable(format="html", align="lc", digits=4, row.names=T) %>%
kable_styling(full_width = F)
scaled = as.data.frame(scale(FinalDF, center=min,scale=max-min))
nn <- neuralnet(Age~YearsAtCompany, + MonthlyIncome + JobSatisfaction + YearsSinceLastPromotion)
FinalDF<-read.csv("AllData3.csv",head=T)
head(FinalDF)
tail(FinalDF)
nn <- neuralnet(Age~YearsAtCompany, + MonthlyIncome + JobSatisfaction + YearsSinceLastPromotion)
nn <- neuralnet(Age~YearsAtCompany, + MonthlyRate + JobSatisfaction + YearsSinceLastPromotion)
NNdfStart <- as.data.frame(lapply(FinalDF, normalize))
scaledata <-scale(FinalDF)
FinalDF<-read.csv("AllData3.csv",head=T)
head(FinalDF)
tail(FinalDF)
FinalDF = subset(FinalDf,select=-X)
dropDFC = subset(FinalDf,select=-X)
dropDFC = subset(FinalDF,select=-X)
head(FinalDF)
dropDFC = subset(FinalDF,select=-c(X)
head(FinalDF)
dropDFC = subset(FinalDF,select=-c(X))
head(FinalDF)
FinalDF = subset(FinalDF,select=-c(X))
head(FinalDF)
tail(FinalDF)
scaledata <-scale(FinalDF)
df =data.frame(FinalDF,c(Age,MonthlyIncome,YearsAtCompany,JobSatisfaction,YearsSinceLastPromotion)
df =data.frame(FinalDF,c(Age,MonthlyIncome,YearsAtCompany,JobSatisfaction,YearsSinceLastPromotion))
df <-data.frame(FinalDF,c(Age,MonthlyIncome,YearsAtCompany,JobSatisfaction,YearsSinceLastPromotion))
df <-data.frame(FinalDF$Age,MonthlyIncome,YearsAtCompany,JobSatisfaction,YearsSinceLastPromotion))
df <-data.frame(FinalDF$Age,MonthlyIncome,YearsAtCompany,JobSatisfaction,YearsSinceLastPromotion)
df <-data.frame(FinalDF$Age,FinalDF$MonthlyIncome,FinalDF$YearsAtCompany,FinalDF$JobSatisfaction,FinalDF$YearsSinceLastPromotion)
nn=neuralnet(Age~YearsAtCompany+MonthlyIncome+JobSatisfaction+YearsSinceLastPromotion,data=df,hidden=3,act.fct = "logistic",
linear.output = FALSE)
nn=neuralnet(FinalDF$Age~FinalDF$YearsAtCompany+FinalDF$MonthlyIncome+FinalDF$JobSatisfaction+FinalDF$YearsSinceLastPromotion,data=df,hidden=3,act.fct = "logistic",
linear.output = FALSE)
nn=neuralnet(Age~YearsAtCompany+MonthlyIncome+JobSatisfaction+YearsSinceLastPromotion,data=df,hidden=3,act.fct = "logistic",
linear.output = FALSE)
df <-data.frame(FinalDF,c(Age,MonthlyIncome,YearsAtCompany,JobSatisfaction,YearsSinceLastPromotion)
df <-data.frame(FinalDF,c(Age,MonthlyIncome,YearsAtCompany,JobSatisfaction,YearsSinceLastPromotion))
df = data.frame(FinalDF,c(Age,MonthlyIncome,YearsAtCompany,JobSatisfaction,YearsSinceLastPromotion))
